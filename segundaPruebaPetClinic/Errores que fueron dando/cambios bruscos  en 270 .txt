modifique el pom y le agregue una nueva dependencia 
el isis-core-wrapper

y en la clase RecreateOwnersAndPets le modifique los imports 

quite estos imports:: 
import domainapp.modules.impl.pets.dom.Owners; 
import domainapp.modules.impl.pets.dom.PetSpecies;
import lombok.Data;

agregue este import 
import org.apache.isis.applib.fixturescripts.setup.PersonaEnumPersistAll; 

dentro de la clase quite este metodo 

    @Data
    static class PetData {

        private final String name;
        private final PetSpecies petSpecies;
    }
    }
        ec.addResult(this,
                createOwner("Smith", "John", null,
                        new PetData("Rover", PetSpecies.Dog))

        );
        ec.addResult(this,
                createOwner("Jones", "Mary", "+353 1 555 1234",
                        new PetData("Tiddles", PetSpecies.Cat),
                        new PetData("Harry", PetSpecies.Budgerigar)
                ));
        ec.addResult(this,
                createOwner("Hughes", "Fred", "07777 987654",

                        new PetData("Jemima", PetSpecies.Hamster)
                ));
    }
    private Owner createOwner(
            final String lastName,
            final String firstName,
            final String phoneNumber,
            final PetData... pets) {
        Owner owner = this.owners.create(lastName, firstName, phoneNumber);
        for (PetData pet : pets) {
            owner.newPet(pet.name, pet.petSpecies);
        }
        return owner;
    }
    }

agregué esto:*******************

ec.executeChild(this, new PersonaEnumPersistAll<>(Owner_enum.class)); 



modifique el @inject 

@Inject 
IsisJdoSupport isisJdoSupport; 



**********En la clase Owners***************

agregué un import Programatic 
import org.apache.isis.applib.annotation.Programmatic;

y modifiqué el metodo findbyName 


